formatter: "markdown table"

content: |-
  {{ .Header }}

  ## Overview

  This module deploys Airbyte, an open-source data integration platform, on Kubernetes. It sets up the necessary Helm release, configures the database, and exposes the Airbyte webserver. This module also includes OAuth2 proxy configuration for secure access.

  ```{tip}
    This implementation uses the official Airbyte Helm chart. You can find more details in the [Airbyte documentation](https://docs.airbyte.com/deploying-airbyte/on-kubernetes/deploy-airbyte-on-kubernetes). 

    Helm values have been customized from the defaults, and common configuration needs are exposed as variables.

    If needed the entire helm chart can be customized by setting the `helm_values` variable.
  ```

  ## Compute Nodes

  For optimal performance, the following resources are recommended:
  - 4 or more CPU cores
  - At least 8GB of memory

  While Airbyte can run in low-resource mode with 2 CPUs and 4GB RAM, this is not recommended for production deployments.

  Note that Airbyte will schedule new pods for every sync job.

  ```{note}
    Airbyte includes a self hosted version of Postgres. This will not back iteslf up, and is not HA. For many use cases, this is not a problem, as Airbyte is not a system of record itself, and can easily be recreated in disaster recovery. However, if you care about configuration durability, you should consider using a managed database. The module exposes postgres configuration options, see the example for more details.
  ```

  ```{Warning}
    Some versions of Airbyte have issues with tolerances and taints. See [this discussion](https://discuss.airbyte.io/t/toleration-changes-in-airbyte-helm-deployment/7524) for more details.
  ```

  ```{warning}
    Airbytes included version of Minio has issues starting on ARM64 nodes. Use AMD64 nodes instead.
  ```

  ```{Warning}
    If deploying on EKS, note that Fargate will not work, as airbyte pods dynamically create new pods, which will not work on Fargate. See [this discussion](https://docs.airbyte.com/enterprise-setup/implementation-guide) for more details.
  ```

  ## Local Deployment

  Airbyte will start on port 30080 by default.

  ## Production Considerations

  Airbyte is licensed under the Elastic License 2.0. Consult the [Airbyte licensing page](https://github.com/airbytehq/airbyte/blob/master/LICENSE) for more details for how that will impact your usecase.

  Airbyte OSS does not include authentication or authorization. We recommend using oauth2 proxy to secure access to the Airbyte webserver. For more advanced security, consider using an enterprise version of Airbyte.

  To use the oauth2 proxy, you will need to provide a client id and secret. You can get these by creating a project in the [Google Developer Console](https://console.cloud.google.com/apis/credentials). Also, provide a list of emails to allow access to the service via the `userlist` variable. See the variable se


  ## Examples

  {{ include "../../doc_site/docs/source/partials/example_note.md" }}

  #### Simple
  ```hcl
  {{ include "examples/simple/main.tf" }}
  ```

  #### OAuth2 Proxy and External Database
  ```hcl
  {{ include "examples/oauth2_and_external_db/main.tf" }}
  ```

  {{ .Inputs }}

  {{ .Outputs }}

  {{ .Providers }}

  {{ .Requirements }}

  {{ .Resources }}

  {{ .Modules }}

sort:
  enabled: true
  by: name

settings:
  anchor: true
  color: true
  default: true
  description: true
  escape: true
  hide-empty: false
  html: true
  indent: 2
  lockfile: true
  read-comments: true
  required: true
  sensitive: true
  type: true
